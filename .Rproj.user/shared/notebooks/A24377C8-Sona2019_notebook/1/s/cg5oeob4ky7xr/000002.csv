"0","library(magrittr)"
"0","library(plotly) "
"0","library(syuzhet)"
"0","library(tm)"
"0","# Create corpus for text mining "
"0","corpus3 <- Corpus(VectorSource(tweets.df))"
"0","# Convert to lower case, remove punctuation, numbers, stopwords and undesirable words"
"0","corpus3 <- tm_map(corpus3, tolower)"
"0","corpus3 <- tm_map(corpus3, removePunctuation)"
"0","corpus3 <- tm_map(corpus3, removeWords, c(stopwords(""english""), ""south"", ""africa"", ""sona2019"", ""ramaphosa"","
"0","                                                                ""ramaphosas"", ""president"", ""presidents"", "
"0","                                                                ""cyril"", ""eff"", ""anc"", ""da"", ""cope"", "
"0","                                                                ""sona19"", ""speech"", ""sona"", ""malema"", "
"0","                                                                ""parliament"", ""ufufuf"", ""scorpions"", "
"0","                                                                ""thabang"", ""mps"", ""mp"", ""julius""))"
"0","corpus3 <- tm_map(corpus3, removeNumbers)"
"0","# Concatenate tokens by document, create data frame"
"0","tweets.df2 <- data.frame(text = sapply(corpus3, paste, collapse = "" ""), stringsAsFactors = FALSE)"
"0","# Perform sentiment analysis using the syuzhet library"
"0","tdm3emotions <- get_nrc_sentiment(tweets.df2$text)"
"0","sona_emotions2 <- tdm3emotions%>%"
"0","                  select(""trust"", ""anticipation"", ""fear"", ""joy"", ""anger"", ""sadness"", ""surprise"", ""disgust"")"
"0","# Create a dataframe with count of sentiment in descending order"
"0","sona_emotions2_bar <- colSums(sona_emotions2) "
"0","sona_emotions2_sum <- data.frame(count = sona_emotions2_bar, sona_emotions2 = names(sona_emotions2_bar))"
"0","sona_emotions2_sum$sona_emotions2 <- factor(sona_emotions2_sum$sona_emotions2, "
"0","                                     levels = sona_emotions2_sum$sona_emotions2[order("
"0","                                     sona_emotions2_sum$count, decreasing = TRUE)])"
"0","# Visualise sentiment analysis"
"0","library(plotly)"
"0","emotion_plot2 <- plot_ly(sona_emotions2_sum,"
"0","                         x = ~sona_emotions2, "
"0","                         y = ~count, "
"0","                         type = ""bar"", "
"0","                         marker = list(color = c(""cyan"", ""rgb(24,154,211)"", "
"0","                                                 ""orange"", ""rgb(30,187,215)"","
"0","                                                 ""rgb(254,46,46)"", ""rgb(254,87,87))"", "
"0","                                                 ""rgb(113,199,236)"", ""rgb(254,129,129)""))) %>%"
"0","                                                     layout (title = ""Count of Emotions (Adjusted) for #SONA2019"", "
"0","                                                     xaxis = list(title = """"),"
"0","                                                     showlegend = FALSE)"
"0","emotion_plot2"
